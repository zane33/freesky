services:
  freesky:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
      - "${BACKEND_PORT:-8005}:${BACKEND_PORT:-8005}"
      - "2019:2019"  # Expose Caddy admin port for debugging
    environment:
      - PORT=${PORT:-3000}
      - BACKEND_PORT=${BACKEND_PORT:-8005}
      - BACKEND_URI=http://localhost:${BACKEND_PORT:-8005}
      - API_URL=http://localhost:${PORT:-3000}
      - DADDYLIVE_URI=${DADDYLIVE_URI:-https://thedaddy.click}
      - PROXY_CONTENT=${PROXY_CONTENT:-TRUE}
      - SOCKS5=${SOCKS5:-}
      - WORKERS=${WORKERS:-3}  # Reduced from 6 to 3 workers
      - REFLEX_ENV=prod
      - REFLEX_SKIP_COMPILE=1
      # Add proxy environment variables
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=localhost,127.0.0.1
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      freesky-network:
        aliases:
          - freesky
    dns:
      - 8.8.8.8  # Use Google DNS as primary
      - 1.1.1.1  # Use Cloudflare DNS as backup
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow container to access host network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3000}/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  freesky-network:
    driver: bridge
    # Enable internet access
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"